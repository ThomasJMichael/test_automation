Python Library Documentation: class Test in module aslinuxtester.test

class Test(builtins.object)
 |  Test(**kwargs)
 |  
 |  Starts, watches, and logs tests, as well as orchestrating post-test scripts
 |  
 |  Include by doing
 |  ```python
 |  from aslinuxtester.test import Test
 |  from aslinuxtester.util import Util
 |  util = Util('/path/to/config/repo')
 |  test = Test(util=util)
 |  ...
 |  ```
 |  
 |  Methods defined here:
 |  
 |  __init__(self, **kwargs)
 |      If util is supplied at init, set the class-level util to that object.
 |      Otherwise, requires a repo_dir to initialize a new util.Util
 |      
 |      Keyword args:
 |        - util (util.Util): [None] A previously initialized util.Util object
 |        - repo_dir (str): [None] The path to the configuration repository
 |      Raises:
 |        - ValueError if neither repo_dir nor util are provided
 |  
 |  all_tests(self, tgt_cfg, **kwargs)
 |      Iterates across the configured test objects form the config file and
 |      amalgamates the results into a single dict with the following structure:
 |      
 |      {
 |          'test_name1' : {
 |              'good_command param1 param2' : 0,
 |              'bad_command param1 param2' : 1
 |          },
 |          'test_name2' : {...}
 |      }
 |      
 |      Args:
 |        - tgt_cfg (dict): The configuration of the target from Util.build_config
 |      Keyword args:
 |        - post_test_scripts (bool): [False] Whether to run post-test scripts
 |          automatically after tests have finished
 |        - fetch_logs (bool): [True] Automatically retrieve logs after running tests
 |        - path (str): [''] Copy path to send over to fetch_logs
 |        - quiet (bool): [False] Set to true to hide status messages
 |      Returns:
 |          A dict of all test return codes indexed by test name
 |  
 |  fetch_logs(self, tgt_cfg, test_name, **kwargs)
 |      Fetches the logs for a test and copies them to the currently set local log
 |      directory.
 |      
 |      NOTE: If no logs are found, this won't tell you.
 |      
 |      Args:
 |        - tgt_cfg (dict): The configuration of the target from Util.build_config
 |        - test_name (str): The name of the test to fetch logs for from provision.json
 |      Keyword args:
 |        - quiet (bool): [False] Set to true to hide status messages
 |        - path (str): [{test_name}] Copy path within local_filepaths['logs']
 |        - compress (bool): [False] Set to true to enable log compression before copying
 |        - archive (str): [logs.targ.gz] If compress is set to True, the name of the archive
 |      Returns:
 |          The directory where the logs were copied to
 |  
 |  run_post_test_scripts(self, tgt_cfg, **kwargs)
 |      Runs any configured post test scripts on the test host machine, not the UUT or UAT.
 |      Useful for uploading logs or cleaning up the working area on the master.
 |      
 |      Args:
 |        - tgt_cfg (dict): The configuration of the target from Util.build_config
 |      Keyword args:
 |        - quiet (bool): [False] Set to true to hide status messages
 |  
 |  run_test(self, tgt_cfg, test_name, **kwargs)
 |      Clones the test repo, iterates across test commands, and formats the exit
 |      codes into a dict with the following structure:
 |      
 |      {
 |          'good_command param1 param2': 0,
 |          'bad_command param1 param2' : 1
 |      }
 |      
 |      Args:
 |        - tgt_cfg (dict): The configuration of the target from Util.build_config
 |        - test_name (str): The name of the test to run from provision.json
 |      Keyword args:
 |        - quiet (bool): [False] Set to true to hide status messages
 |        - path (str): [''] Copy path to send over to fetch_logs
 |        - fetch_logs (bool): [True] Automatically retrieve logs after running test
 |      Returns:
 |          A dict of all test command exit codes
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)
