---
- name: Conditionally gather facts
  setup:
  when: ansible_os_family is undefined

- name: Load pconfig variables
  include_vars:
    file: "{{ pconfig }}"
    name: "pconfig_vars"

- name: Ensure [main] section exists in dnf.conf
  when: ansible_os_family == "RedHat"
  lineinfile:
    path: /etc/dnf/dnf.conf
    regexp: '^\[main\]'
    line: '[main]'
    create: true
  become: true

- name: Set up proxy for DNF (Recent RedHat based systems)
  when: ansible_os_family == "RedHat"
  lineinfile:
    path: /etc/dnf/dnf.conf
    regexp: '^proxy='
    line: "proxy={{ pconfig_vars.ansible_vars.proxy.proto }}{{ pconfig_vars.ansible_vars.proxy.host }}:{{ pconfig_vars.ansible_vars.proxy.port }}"
    create: true
  become: true

- name: Set up proxy for APT (Debian based systems)
  when: ansible_os_family == "Debian"
  copy:
    content: |
      Acquire::http::Proxy "{{ pconfig_vars.ansible_vars.proxy.proto }}{{ pconfig_vars.ansible_vars.proxy.host }}:{{ pconfig_vars.ansible_vars.proxy.port }}";
    dest: /etc/apt/apt.conf.d/90proxy
  become: true

- name: Set up proxy for bash environment
  lineinfile:
    path: /etc/environment
    regexp: '^{{ item }}_PROXY='
    line: "{{ item }}_PROXY={{ pconfig_vars.ansible_vars.proxy.proto }}{{ pconfig_vars.ansible_vars.proxy.host }}:{{ pconfig_vars.ansible_vars.proxy.port }}"
    state: present
  loop:
    - HTTP
    - HTTPS
  become: true

- name: Apply the proxy settings immediately
  shell: |
    export HTTP_PROXY="{{ pconfig_vars.ansible_vars.proxy.proto }}{{ pconfig_vars.ansible_vars.proxy.host }}:{{ pconfig_vars.ansible_vars.proxy.port }}"
    export HTTPS_PROXY="{{ pconfig_vars.ansible_vars.proxy.proto }}{{ pconfig_vars.ansible_vars.proxy.host }}:{{ pconfig_vars.ansible_vars.proxy.port }}"
